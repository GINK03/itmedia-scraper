　「モバイル端末にもオープンWebを 〜Firefox OSがもたらすもの〜」と題した講演では、Mozilla Japan マーケティングマネージャーの小坂哲也氏が、「Webをよりオープン、かつ、革新的でユーザーにさまざまなチャンスを与えてくれるものにする」というMozillaのミッションを紹介した上で、「Firefox OSもそのミッションを実現する活動の1つだ」とMozillaがOSを開発する意義を説明した。 　なお、今後2018年までの価格帯別スマートフォン市場で、100〜200ドルのミドルロースマートフォンと100ドル未満のローエンドスマートフォンのシェアが半数近くになり、それに伴い、モバイルOSのシェアでFirefox OSが10パーセントを超えるという調査会社の予測も講演であわせて示している。（記事掲載当初、価格の記述に誤りがありました。おわびして訂正いたします） 　小坂氏は、MozillaがWebブラウザのFirefox開発を通して、HTML 5などのWebで利用する標準規格の策定や、デバイスに接続した周辺機器をWeb上で制御するWeb APIの整備、そして、個人認証技術などの導入によってWebサービスを利用するアプリとしての信頼性を高めることで、2013年2月のMobile World CongrassでFirefox OSを発表したときに多くの通信事業者や端末メーカーから賛同を得ることができたと語った。 　小坂氏は、Firefox OSがWeb技術を利用したOSなので、これまでアプリ開発の経験がなくても、HTML5対応Webページを作成したことがある技術者であれば、OSのカスタマイズや対応サービスの開発が可能という、アプリ開発のメリットも訴求する。ハードウェアの制御もWeb APIを利用すれば可能で、Webベースの“軽い”アーキテクチャゆえに、システムメモリの容量など必要とするハードウェア構成も厳しくなく、新興国向けのミドルレンジからローエンドのスマートフォンでも動作が速い。 　小坂氏は、Firefox OS対応アプリの実例として、適合型アプリ検索の「everything.me」を紹介している。従来の検索エンジンがキーワードを含むWebページのURLリストを表示し、ユーザーはWebページにアクセスしてから情報やコンテンツ、サービスを利用できるのに対して、この検索アプリでは、キーワードに関連した情報やコンテンツをリストにするので、ユーザーはリストから選択すればすぐにサービスが利用できる。 　なお、Mozillaは、アプリを流通する仕組みとして、「Firefox Marketplace」を用意する。アプリ購入の支払いでは、キャリア決済に対応してアプリ内課金も可能になるほか、通信事業者やメーカーが独自のストアをFirefox Marketplaceに構築できる予定だ。 　Mozilla Japan テクニカルマーケティングの浅井智也氏は、Firefox OSのアーキテクチャ概要を説明した。浅井氏は、AndroidやTizenと異なり、カーネルとHALの上にフレームワークを必要とせず、カーネルとHALの上に直接おいたGeckoエンジンからWebアプリを動かすことで、Firefox OSは“軽いOS”を実現したと述べる。 　なお、Firefox OSで利用できるWebアプリは、従来のWebブラウザと同じようにWebページから読み込んで使う「Web読み込み型」のほかに、Webページ全体をZIPファイルにパッケージ化した「ダウンロード型」も提供する。ユーザーは、ZIPファイルをローカルにダウンロードして利用するようになる。 　浅井氏は、Webベースのプラットフォームはセキュリティ管理が弱く危険というユーザーの認識に対して、現在主流の「導入時警告表示」だけではセキュリティー的な意味はなく、位置情報や個人情報、デバイス固有IDなどをすべてアプリが取得できて送信してしまう仕組みでは確かに危険だが、Firefox OSのように、認証を制御するエンジンを備え、プライバシー情報にアクセスするAPIを実行するときに確認を行ったりデバイス固有IDを取得させないWebプラットフォームなら安全だと反論する。 　また、現在のWebプラットフォームでは、デバイスやシステムを制御するAPIが足りないことや、パフォーマンスが低くこと、そして、アプリ流通と課金のシステムで標準規格がないことというさまざまな問題を挙げたうえで、Firefox OSでは、ハードウェア制御のWeb APIをさまざまなデバイスに対してそろえているほか、Firefox MarketPlaceでアプリの流通や課金システムを用意すると説明した。処理速度についても、MozillaとEpicが協力して、3Dグラフィックスを多用する最新のゲームエンジン「Unreal Engine 3」をWebに移植して高速描画が可能であることや、JavaScriptの処理速度がJavaとC言語でコードを記述したプログラムの環境に近づいていることをベンチマークテストの結果とともに示している。 Copyright© 2017 ITmedia, Inc. All Rights Reserved. この記事が気に入ったらITmedia Mobile に「いいね！」しよう